No caso dessa configura칞칚o, foi utiliza칞칚o autentica칞칚o por variavel de ambiente no SO linux:

export AWS_ACCESS_KEY_ID="anaccesskey"
export AWS_SECRET_ACCESS_KEY="asecretkey"
export AWS_REGION="us-west-2"

游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲

Para testar com variavel de ambiente de homologa칞칚o ou produ칞칚o para criar a vpn conforme express칚o
no arquivo network.tf, utilize no terminal:

export TF_VAR_environment=develop (assim o recurso n칚o ser치 criado)
export TF_VAR_environment=prod (o recurso n칚o ser치 criado)

游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲游댲

terraform init
terraform validate: Valida se a configura칞칚o informando se ser치 removido e/ou adicionado recursos.
terraform fmt: Formata o arquivo .tf no com identa칞칫es e formato padronizado.
terraform plan --out=plan.out: Analisa o que ser치 feito e informa se algo ser치 criado e/ou destruido.
erraform apply plan.out : Aplica de fato as configura칞칫es
terraform destroy: destroi tudo que est치 configurado 


ssh -i aws-key ubuntu@endereco.ip